#!/bin/bash

# Fonctions

function PrintHelp ()
{
	echo
	echo "Usage : morning [OPTION]..."
	echo ----------------------------
	echo
	echo "	-n				   Used to write a message to print to tomorrow."
	echo "						 Can be used with a positive integer to"
	echo "						 report the message by the number of days"
	echo
	echo "		--help		   Display this help and exit"
	echo
}

function MorningRoutine () 
{
	echo ----------------------------
	date
	echo ----------------------------

	echo
	echo Executing commands
	echo ------------------

	bash $commandsfile

	# Execute user defined commands
	# will have to implement way to execute said script and to edit it	

	echo 
	echo Reminders
	echo ------------------- 

	echo $(cat $remindersfile)
	# Print user defined daily reminders
	# will have to implement a way to edit reminders

	filename="Morning_${year}_${month}_${day}.txt"

	echo
	echo Message for you
	echo ---------------

	# Print message for the day

	if [ -f "$filename" ]; then
		cat "$filename"
		echo
	else
		echo No messages to display
	fi
}

function CreateFile ()
{
	# Creating the name of the file
	textarray=()

	# Add number of days requested or the default of one
	if [ $# -eq 1 ]; then
		day=$(($day+$1))
	else
		day=$(($day+1))
	fi

	filename="Morning_${year}_${month}_${day}.txt"

	# Read text
	read -p $'Enter text (enter eol to end): \n' text
	while [ "$text" != "eol" ]
	do
		textarray+=("$text")
		read text
	done

		# If array is empty do not create file
	if [ "${#textarray[@]}" -ne 0 ]; then
	
		# Write text to array
		for i in "${textarray[@]}"
		do
			echo $i >> "$filename"
		done

	fi
}

function CleanMessages ()
{

	listMornings=($(ls -1 | egrep 'Morning_[0-9]{4}_[0-9]{2}_[0-9]{2}.txt'))

	echo
	
	for file in "${listMornings[@]}"
	do

		fileyear=$(echo "$file" | cut -d '_' -f2)
		filemonth=$(echo "$file" | cut -d '_' -f3)
		fileday=$(echo "$file" | cut -d '_' -f4 | cut -d '.' -f1)
		#echo ${fileyear}/${filemonth}/${fileday}
		
		# Check if message file is older than the current date
		if [ "$fileyear" -lt "$year" ]; then
			# Delete file
			rm "$file"

		elif [ "$fileyear" -eq "$year" ]; then
 
			if [ "$filemonth" -lt "$month" ]; then
				# Delete file
				rm "$file"

			elif [ "$filemonth" -eq "$month" ]; then

				if [ "$fileday" -lt "$day" ]; then
					# Delete file
					rm "$file"
				fi
			fi
		fi

	done
}

function SetDate ()
{	
	day=$(date +%d)
	month=$(date +%m)
	year=$(date +%Y)
}

# Initialisation

remindersfile="reminders.txt"
commandsfile="commands"

SetDate

# Arguments parsing

if [ $# -eq 0 ]; then
	# Run daily commands
	MorningRoutine
	# Clean message folder of older messages
	CleanMessages
else
	if [ $# -gt 2 ]; then
		echo
		echo "Too many arguments : $#"
		PrintHelp
		exit 128
	fi

	if [ "$1" = "--help" ]; then
			PrintHelp
	fi

	# Writing message if parameter -n

	if [ "$1" = "-n" ]; then

		if [ $# -eq 1 ]; then
			CreateFile
		fi

		# If there is a number of days skip ahead by that much
		if [ $# -eq 2 ]; then

			# Test to see if number is a positive integer
			if [[ $2 =~ ^[+]?[0-9]+$ ]]; then
				CreateFile $2
			else
				echo Invalid parameter for -n option
				PrintHelp
			fi
		fi
	fi
fi
